#!/usr/bin/env python

import pyelliptic
import re
import sys

from base64 import b64decode
from base64 import b64encode

def usage():
    print "Usage: " + sys.argv[0] + " <keyfile>"
    print ""
    print "<keyfile> is a text file containing at least one line     "
    print "beginning with 'pw_pubkey = ' followed by a secret key    "
    print "generated by pw_keygen. Then this script reads from stdin "
    print "and encrypts it one line at a time. This tool is for      "
    print "debugging purposes only.                                  "

def error(m):
    usage()
    print ""
    print "error: " + m
    exit(1)

# Sanity check command line argument
if len(sys.argv) < 2:
    error("no keyfile argument provided")

if len(sys.argv) > 2:
    error("too many arguments")

# Open the keyfile and look for the secret key

pubkey = ""
keyfile = open(sys.argv[1])
for line in keyfile:

    m = re.search('pw_pubkey *= *[\'"]?([A-Za-z0-9=+/]+)', line)
    if m:
        if len(pubkey) > 0:
            error("more than one secret key found!")
        pubkey = m.group(1)
    

if pubkey == "":
    error("no pubkey key found in file")

pubkey = b64decode(pubkey)

actor = pyelliptic.ECC(pubkey=pubkey)

## Encrypt every line

for line in sys.stdin:
    print b64encode(actor.encrypt(line, pubkey))
